// Code generated by mockery. DO NOT EDIT.

package discord_test

import (
	discord "github.com/nijeti/cinema-keeper/internal/discord"
	mock "github.com/stretchr/testify/mock"
)

// MockRouterOpt is an autogenerated mock type for the RouterOpt type
type MockRouterOpt struct {
	mock.Mock
}

type MockRouterOpt_Expecter struct {
	mock *mock.Mock
}

func (_m *MockRouterOpt) EXPECT() *MockRouterOpt_Expecter {
	return &MockRouterOpt_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: r
func (_m *MockRouterOpt) Execute(r *discord.Router) {
	_m.Called(r)
}

// MockRouterOpt_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockRouterOpt_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - r *discord.Router
func (_e *MockRouterOpt_Expecter) Execute(r interface{}) *MockRouterOpt_Execute_Call {
	return &MockRouterOpt_Execute_Call{Call: _e.mock.On("Execute", r)}
}

func (_c *MockRouterOpt_Execute_Call) Run(run func(r *discord.Router)) *MockRouterOpt_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*discord.Router))
	})
	return _c
}

func (_c *MockRouterOpt_Execute_Call) Return() *MockRouterOpt_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRouterOpt_Execute_Call) RunAndReturn(run func(*discord.Router)) *MockRouterOpt_Execute_Call {
	_c.Run(run)
	return _c
}

// NewMockRouterOpt creates a new instance of MockRouterOpt. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRouterOpt(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRouterOpt {
	mock := &MockRouterOpt{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
